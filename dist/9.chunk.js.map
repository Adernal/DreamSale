{"version":3,"sources":["/home/elliot/Projects/Freelance/DS/src/app/layout/category/category-routing.module.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.html","/home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.scss","/home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/category/category.module.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/category/category.service.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/category/filter.pipe.ts","/home/elliot/Projects/Freelance/DS/~/ngx-pagination/dist/ngx-pagination.js?e65f****"],"names":[],"mappings":"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AAG,EAAe,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAnB,IAAM,IAAI;YACV,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,IAAE,CAAC,CAAC,EAAC;gBAC1E,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;SACJ;QACD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEH,iBAAC;AAAD,CAAC;AAfY,UAAU;IAJtB,0EAAI,CAAC;QACJ,IAAI,EAAE,QAAQ;QACd,IAAI,EAAC,KAAK;KACX,CAAC;GACW,UAAU,CAetB;AAfsB;;;;;;;;;;;;;;;;;;ACNoH;AACpH;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,2CAA2C;AAC3C,KAAK,2BAA2B;AAChC,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oqBAAoqB,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,0RAA0R,yBAAyB,kCAAkC,cAAc,oIAAoI,4BAA4B,kCAAkC,cAAc,qSAAqS,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AAC98D,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,sCAAsC,wBAAwB,kCAAkC,qBAAqB,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE;;AAEjrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,YAAY,6DAAc;AAC1B,iBAAiB,6DAAc;AAC/B,wBAAwB,6DAAc;AACtC,kBAAkB,6DAAc;AAChC,uBAAuB,6DAAc;AACrC,mBAAmB,6DAAc;AACjC,qCAAqC,6DAAc;AACnD,+BAA+B,6DAAc;AAC7C,kCAAkC,6DAAc;AAChD,oBAAoB,8DAAe;AACnaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,0DAA0D;AAC1D,KAAK,2BAA2B;AAChC,KAAK,0EAA2B;AAChC,EAAE;AACF;AACA,YAAY,6DAAc;AAC1B,iBAAiB,6DAAc;AAC/B,oBAAoB,8DAAe;AACnC;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA,kDAAkD,WAAW;;AAE7D;AACA;AACA;;AAEQ","file":"9.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoryComponent } from './category.component';\n\nconst routes: Routes = [\n    { path: '', component: CategoryComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class CategoryRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n<h1>  Category Management </h1>\\n     <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n      <form role=\\\"form\\\" (ngSubmit)=\\\"addCategory(f)\\\" #f=\\\"ngForm\\\" class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n                <label class=\\\"card-header\\\">Category Name</label>\\n                <input class=\\\"form-control\\\" ngModel name=\\\"Name\\\" required placeholder=\\\"Enter Category Name\\\" *ngIf=\\\"!editMode\\\">\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"Name\\\" name=\\\"Name\\\" required value=\\\"{{Name}}\\\" *ngIf=\\\"editMode\\\">\\n                <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n            </fieldset>\\n\\n\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Category Description</label>\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n              ngModel\\n               name=\\\"Description\\\"\\n\\n              required\\n\\n              placeholder=\\\"Enter Category Description\\\"\\n                *ngIf=\\\"!editMode\\\"\\n              ></textarea>\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n              [(ngModel)]=\\\"Description\\\"\\n               name=\\\"Description\\\"\\n\\n              required\\n\\n              value=\\\"{{Description}}\\\" *ngIf=\\\"editMode\\\"></textarea>\\n          </fieldset>\\n\\n\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" *ngIf=\\\"!editMode\\\">Add Category</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" *ngIf=\\\"editMode\\\">Edit Category</button>\\n\\n\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Display Order</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" ngModel name=\\\"DisplayOrder\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            *ngIf=\\\"!editMode\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"DisplayOrder\\\" name=\\\"DisplayOrder\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            *ngIf=\\\"editMode\\\">\\n        </fieldset>\\n        <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Picture</label>\\n            <image-upload [max]=\\\"1\\\" [url]=\\\"'http://piyushdaftary-001-site1.ctempurl.com/api/Pictures/upload'\\\" [buttonCaption]=\\\"'Select Images!'\\\" [extensions]=\\\"['jpg','png','gif']\\\" (onFileUploadFinish)=\\\"getPictureDetails($event)\\\"></image-upload>\\n        </fieldset>\\n        <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Select Parent Category (Optional)</label>\\n            <select class=\\\"form-control\\\" *ngIf=\\\"!editMode\\\" ngModel name=\\\"parentcategory\\\" size=\\\"4\\\">\\n              <option *ngFor=\\\"let i= index;let parentcategory of category\\\" value={{parentcategory.Id}}>\\n                {{parentcategory.Name}}\\n              <hr></option>\\n                    </select>\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"ParentCategories\\\" name=\\\"parentcategory\\\" *ngIf=\\\"editMode\\\" size=\\\"4\\\">\\n              <option *ngFor=\\\"let i = index;let parentcategory of category\\\" value=\\\"{{parentcategory.Id}}\\\" >\\n                {{parentcategory.Name}}\\n              <hr></option>\\n            </select>\\n        </fieldset>\\n\\n        </div>\\n\\n\\n  </div>\\n</form>\\n  </div>\\n</div>\\n<img [src]=\\\"loadingImagePath\\\" *ngIf=\\\"loadingCategory\\\" alt=\\\"\\\">\\n <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h2>Category List</h2>\\n                    <input type=\\\"text\\\" placeholder=\\\"Search Category\\\" [(ngModel)]=\\\"filteredCategory\\\" style=\\\"width:100%\\\">\\n                </div>\\n                <div class=\\\"card-block table-responsive\\\" style=\\\"width:100%;\\\">\\n                    <table class=\\\"table table-bordered\\\" style=\\\"table-layout:fixed\\\">\\n                        <thead class=\\\"thead-inverse\\\">\\n                        <tr>\\n\\n                            <th>Category Name</th>\\n\\n                            <th>Display Order</th>\\n                            <th>Action</th>\\n\\n\\n\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor =\\\" let i = index;let category of category | filter: filteredCategory : 'Name' | paginate: { itemsPerPage: 10, currentPage: currentPageNumber }\\\">\\n\\n\\n                          <td>{{category.Name}}</td>\\n\\n                          <td>{{category.DisplayOrder}}</td>\\n                          <td><button type=\\\"button\\\" name=\\\"{{category.Id}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editCategoryMode(c)\\\" #c><i class=\\\"fa fa-edit\\\"></i></button>\\n                          <button type=\\\"button\\\" name=\\\"{{i}}\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteCategory(d)\\\" #d><i class=\\\"fa fa-times\\\"></i></button></td>\\n\\n                        </tr>\\n\\n                        </tbody>\\n                    </table>\\n                    <pagination-controls (pageChange)=\\\"currentPageNumber = $event\\\"></pagination-controls>\\n\\n                </div>\\n            </div>\\n\\n\\n\\n    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.html\n// module id = ../../../../../src/app/layout/category/category.component.html\n// module chunks = 9","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.scss\n// module id = ../../../../../src/app/layout/category/category.component.scss\n// module chunks = 9","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NgModule} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {CategoryService} from './category.service';\n\n\n@Component({\n  selector: 'app-category',\n\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\n\nexport class CategoryComponent implements OnInit {\n  currentPageNumber: number = 1;\n  @ViewChild('f') categoryForm: NgForm;\n  submitted = false;\n  category = [];\n  Id: Number;\n  Name = '';\n  Description = '';\n  DisplayOrder: Number;\n  ParentCategoryId:Number;\n  ParentCategory='';\n  currentCategory=[];\n  editMode = false;\n  filteredCategory = '';\n  categories;\n  PictureId:number;\n  imageUrl:string;\n  loadingCategory=false;\n  loadingImagePath='../../assets/images/ajax-loader.gif';\n\n\n\n  constructor(private categoryService: CategoryService) {\n    this.PictureId=0;\n    this.imageUrl='';\n  }\n\n  ngOnInit() {\n    // localStorage.removeItem(\"categories\");\n    this.ParentCategoryId=0;\n    this.getCategory();\n\n\n\n  }\n  addCategory() {\n    this.submitted = true;\n    this.loadingCategory=true;\n    if (this.editMode) {\n      this.editCategory();\n    }\n    else {\n      if (this.category.length == 0) {\n        this.Id = 1;\n      }\n      else {\n        this.Id = +this.category[this.category.length - 1].Id + 1;\n      }\n\n      this.Name = this.categoryForm.value.Name;\n      this.Description = this.categoryForm.value.Description;\n      this.DisplayOrder = this.categoryForm.value.DisplayOrder;\n      if(this.categoryForm.value.parentcategory==='' || this.categoryForm.value.parentcategory===null){\n        this.ParentCategoryId=0;\n      }\n        else{\n          this.ParentCategoryId = this.categoryForm.value.parentcategory;\n\n          this.getCategoryName();\n      }\n\n      this.category.push({\n        'Id':0,\n        'CustomProperties': {\n          'sample string 1': {},\n          'sample string 3': {}\n        },\n        'Name': this.Name,\n        'Description': this.Description,\n        'CategoryTemplateId': 4,\n        'AvailableCategoryTemplates': [\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          },\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          }\n        ],\n        'MetaKeywords': 'sample string 5',\n        'MetaDescription': 'sample string 6',\n        'MetaTitle': 'sample string 7',\n        'SeName': 'sample string 8',\n        'ParentCategoryId': this.ParentCategoryId,\n        'PictureId': this.PictureId,\n        'PageSize': 11,\n        'AllowCustomersToSelectPageSize': true,\n        'PageSizeOptions': 'sample string 13',\n        'PriceRanges': 'sample string 14',\n        'ShowOnHomePage': true,\n        'IncludeInTopMenu': true,\n        'Published': true,\n        'Deleted': true,\n        'DisplayOrder': this.DisplayOrder,\n        'Locales': [\n          {\n            'LanguageId': 1,\n            'Name': 'sample string 2',\n            'Description': 'sample string 3',\n            'MetaKeywords': 'sample string 4',\n            'MetaDescription': 'sample string 5',\n            'MetaTitle': 'sample string 6',\n            'SeName': 'sample string 7'\n          },\n          {\n            'LanguageId': 1,\n            'Name': 'sample string 2',\n            'Description': 'sample string 3',\n            'MetaKeywords': 'sample string 4',\n            'MetaDescription': 'sample string 5',\n            'MetaTitle': 'sample string 6',\n            'SeName': 'sample string 7'\n          }\n        ],\n        'Breadcrumb': 'sample string 20',\n        'SelectedCustomerRoleIds': [\n          1,\n          2\n        ],\n        'AvailableCustomerRoles': [\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          },\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          }\n        ],\n        'SelectedStoreIds': [\n          1,\n          2\n        ],\n        'AvailableStores': [\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          },\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          }\n        ],\n        'AvailableCategories': [\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          },\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          }\n        ],\n        'SelectedDiscountIds': [\n          1,\n          2\n        ],\n        'AvailableDiscounts': [\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          },\n          {\n            'Disabled': true,\n            'Group': {\n              'Disabled': true,\n              'Name': 'sample string 2'\n            },\n            'Selected': true,\n            'Text': 'sample string 3',\n            'Value': 'sample string 4'\n          }\n        ]\n      });\n      //  localStorage.setItem(\"categories\",JSON.stringify(this.category));\n      this.categoryService.storeCategory(this.category)\n        .subscribe(\n        (data) => {\n          console.log(data);\n          alert('Added !');\n          this.getCategory();\n        },\n        (error) => {\n          alert('Failed to add !');\n          console.log(error)\n        }\n        );\n      //  this.categorys.category=category;\n\n      this.categoryForm.reset();\n    }\n\n  }\n  editCategoryMode(id: HTMLFormElement) {\n    this.editMode = true;\n    this.Id = +id.name;\n    this.currentCategory = this.getCurrentCategory(this.Id)[0];\n    // console.log(this.category[1].Name);\n    this.Name = this.currentCategory[\"Name\"];\n    this.Description = this.currentCategory[\"Description\"];\n    this.DisplayOrder = this.currentCategory[\"DisplayOrder\"];\n    this.ParentCategoryId = this.currentCategory[\"ParentCategoryId\"];\n\n\n  }\n  editCategory() {\n    this.loadingCategory=true;\n    this.editMode = false;\n    this.Name = this.categoryForm.value.Name;\n    this.Description = this.categoryForm.value.Description;\n    this.DisplayOrder = this.categoryForm.value.DisplayOrder;\n    this.ParentCategoryId = this.categoryForm.value.parentcategory;\n    if(this.categoryForm.value.parentcategory==='' || this.categoryForm.value.parentcategory===null){\n      this.ParentCategoryId=0;\n    }\n      else{\n        this.ParentCategoryId = this.categoryForm.value.parentcategory;\n\n        this.getCategoryName();\n    }\n    console.log(this.ParentCategoryId);\n\n\n\n    this.currentCategory[\"Name\"] = this.Name;\n    this.currentCategory[\"Description\"] = this.Description;\n    this.currentCategory[\"DisplayOrder\"] = this.DisplayOrder;\n    this.currentCategory[\"ParentCategoryId\"] = this.ParentCategoryId;\n    // localStorage.setItem(\"categories\",JSON.stringify(this.category));\n    this.categoryService.updateCategory(this.currentCategory)\n      .subscribe(\n      (data) => {\n\n        console.log(\"Category Updated\");\n\n        this.getCategory();\n        alert('Edited !');\n      },\n      (error) => {\n        console.log(error);\n        alert('Can\\'t fetch data ! Please refresh or check your connnection !');\n      }\n      );\n\n  }\n  getCategory() {\n    this.loadingCategory=true;\n    this.categoryService.getCategory()\n      .subscribe(\n      (response) => {\n        this.categories = (response.json());\n        this.category = this.categories.Data;\n        this.loadingCategory=false;\n        console.log((\"Fetched Category\"));\n\n        //  this.attribute =[this.attributes];\n      },\n      (error) => {\n        console.log(error)\n        alert('Can\\'t fetch data ! Please refresh or check your connnection !');\n      }\n      );\n\n  }\n  deleteCategory(id: HTMLFormElement) {\n    const confirmation = confirm('Are you sure you want to delete ?');\n    if (confirmation) {\n      this.loadingCategory=true;\n      this.categoryService.deleteCategory(+id.name)\n        .subscribe(\n        (data) => {\n          this.getCategory();\n          alert('Deleted !');\n        },\n        (error) => {\n          console.log(error)\n          alert('Can\\'t fetch data ! Please refresh or check your connnection !')\n        }\n        );\n    }\n    if (this.editMode) {\n      this.editMode = false;\n\n    }\n  }\n   getCurrentCategory(id:Number) {\n    return this.category.filter(\n        function(category){ return category.Id == id }\n    );\n  }\n  getCategoryName(){\n    if(this.ParentCategoryId>0){\n      var index=this.getCurrentCategory(this.ParentCategoryId);\n      this.ParentCategory = index[0].Name;\n      this.Name=this.ParentCategory+'--->'+this.Name;\n    }\n\n  }\n  getPictureDetails(file){\n        this.PictureId = file.serverResponse.json().pictureId;\n        this.imageUrl = file.serverResponse.json().imageUrl;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoryRoutingModule } from './category-routing.module';\nimport { CategoryComponent } from './category.component';\nimport { FormsModule } from '@angular/forms';\nimport { FilterPipe } from './filter.pipe';\nimport { CategoryService } from './category.service';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ImageUploadModule } from '../../../../node_modules/angular2-image-upload/src/image-upload.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CategoryRoutingModule,\n    FormsModule,\n    NgxPaginationModule,\n    ImageUploadModule.forRoot()\n  ],\n  providers: [CategoryService],\n  declarations: [CategoryComponent, FilterPipe]\n})\nexport class CategoryModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category.module.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\n@Injectable()\nexport class CategoryService {\n    temp: {};\n    constructor(private http: Http) { }\n    storeCategory(category) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        this.temp = category[category.length-1];\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Categories/Add?continueEditing=true', this.temp,\n            { headers: headers });\n    }\n    getCategory() {\n        return this.http.get('http://piyushdaftary-001-site1.ctempurl.com/api/Categories');\n    }\n    updateCategory(category) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Categories/Update?continueEditing=true', category, { headers: headers });\n    }\n    deleteCategory(id) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Categories/Delete?id='+id, null, { headers: headers });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/category.service.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false,\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, filteredCategory: string ,propName : string): any {\n    if(value.length===0 || filteredCategory===''){\n      return value;\n    }\n    const resultArray=[];\n    for(const item of value){\n        if(item[propName].toLowerCase().indexOf(filteredCategory.toLowerCase())>=0){\n          resultArray.push(item);\n        }\n    }\n    return resultArray;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/category/filter.pipe.ts","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId(),\r\n            itemsPerPage: config.itemsPerPage || 0,\r\n            currentPage: config.currentPage || 1,\r\n            totalItems: config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    return PaginatePipe;\r\n}());\r\nPaginatePipe.decorators = [\r\n    { type: Pipe, args: [{\r\n                name: 'paginate',\r\n                pure: false\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nPaginatePipe.ctorParameters = function () { return [\r\n    { type: PaginationService, },\r\n]; };\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */ var DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < p.getCurrent()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" *ngFor=\\\"let page of p.pages\\\">\\n            <a (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!p.isLastPage()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\n\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PaginationControlsComponent;\r\n}());\r\nPaginationControlsComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'pagination-controls',\r\n                template: DEFAULT_TEMPLATE,\r\n                styles: [DEFAULT_STYLES],\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                encapsulation: ViewEncapsulation.None\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nPaginationControlsComponent.ctorParameters = function () { return []; };\r\nPaginationControlsComponent.propDecorators = {\r\n    'id': [{ type: Input },],\r\n    'maxSize': [{ type: Input },],\r\n    'directionLinks': [{ type: Input },],\r\n    'autoHide': [{ type: Input },],\r\n    'previousLabel': [{ type: Input },],\r\n    'nextLabel': [{ type: Input },],\r\n    'screenReaderPaginationLabel': [{ type: Input },],\r\n    'screenReaderPageLabel': [{ type: Input },],\r\n    'screenReaderCurrentLabel': [{ type: Input },],\r\n    'pageChange': [{ type: Output },],\r\n};\n\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (!this.service.getInstance(this.id).id) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.setCurrent(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    return PaginationControlsDirective;\r\n}());\r\nPaginationControlsDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: 'pagination-template,[pagination-template]',\r\n                exportAs: 'paginationApi'\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nPaginationControlsDirective.ctorParameters = function () { return [\r\n    { type: PaginationService, },\r\n    { type: ChangeDetectorRef, },\r\n]; };\r\nPaginationControlsDirective.propDecorators = {\r\n    'id': [{ type: Input },],\r\n    'maxSize': [{ type: Input },],\r\n    'pageChange': [{ type: Output },],\r\n};\n\nvar NgxPaginationModule = (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    return NgxPaginationModule;\r\n}());\r\nNgxPaginationModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [CommonModule],\r\n                declarations: [\r\n                    PaginatePipe,\r\n                    PaginationControlsComponent,\r\n                    PaginationControlsDirective\r\n                ],\r\n                providers: [PaginationService],\r\n                exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nNgxPaginationModule.ctorParameters = function () { return []; };\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/~/ngx-pagination/dist/ngx-pagination.js\n// module id = ../../../../ngx-pagination/dist/ngx-pagination.js\n// module chunks = 4 5 6 7 8 9 13 15"],"sourceRoot":"webpack:///"}