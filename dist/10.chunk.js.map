{"version":3,"sources":["/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/filter.pipe.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendor.service.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors-routing.module.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.html","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.scss","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.module.ts"],"names":[],"mappings":"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","file":"10.chunk.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false,\n})\n\nexport class FilterPipe implements PipeTransform {\n  prop1:string;\n  prop2:string;\n  transform(value: any, filteredVendor: string ,propName :string,propName2:string): any {\n    // if(value.length===0 || filteredVendor===''){\n    //   return value;\n    // }\n    // // this.prop1 = propName[0];\n    // // this.prop2 =propName[1];\n    // const resultArray=[];\n    // for(const item of value){\n    //     if((item[propName].toLowerCase().indexOf(filteredVendor.toLowerCase())>=0) || (item[propName2].toLowerCase().indexOf(filteredVendor.toLowerCase())>=0)){\n    //       resultArray.push(item);\n    //     }\n    //\n    // }\n    // return resultArray;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/filter.pipe.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\n@Injectable()\nexport class VendorService {\n    temp: {};\n    constructor(private http: Http) { }\n    storeVendor(Vendor) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        this.temp = Vendor[Vendor.length-1];\n        console.log(this.temp);\n\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/vendors/CreateVendor', this.temp,\n            { headers: headers });\n\n    }\n    getVendor() {\n        return this.http.get('http://piyushdaftary-001-site1.ctempurl.com/api/Vendors');\n    }\n    updateVendor(vendor) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        console.log(vendor);\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/vendors/EditVendor', vendor, { headers: headers });\n    }\n    deleteVendor(id) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Vendors/Delete?id='+id, null, { headers: headers });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendor.service.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VendorsComponent } from './vendors.component';\n// import { ProductTagsComponent } from './product-tags/product-tags.component';\n\nconst routes: Routes = [\n    { path: '', component: VendorsComponent },\n\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class VendorsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n<h1> Vendor Management </h1>\\n     <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n      <form role=\\\"form\\\" (ngSubmit)=\\\"addVendor(f)\\\" #f=\\\"ngForm\\\" class=\\\"container\\\" *ngIf=\\\"!editMode\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n                <label class=\\\"card-header\\\">Vendor</label>\\n                <input class=\\\"form-control\\\" ngModel name=\\\"Name\\\" required placeholder=\\\"Enter Vendor Name\\\" >\\n\\n                <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n            </fieldset>\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Vendor Description</label>\\n                <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n                ngModel\\n                 name=\\\"Description\\\"\\n\\n\\n                placeholder=\\\"Enter vendor Description\\\"\\n\\n                  required\\n                ></textarea>\\n\\n          </fieldset>\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Picture</label>\\n              <image-upload [max]=\\\"1\\\" [url]=\\\"'http://piyushdaftary-001-site1.ctempurl.com/api/Pictures/upload'\\\" [buttonCaption]=\\\"'Select Images!'\\\" [extensions]=\\\"['jpg','png','gif']\\\" (onFileUploadFinish)=\\\"getPictureDetails($event)\\\"></image-upload>\\n          </fieldset>\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n\\n            <label class=\\\"card-header\\\">Display Order</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" ngModel name=\\\"Display_Order\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            >\\n\\n          </fieldset>\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n  <label class=\\\"card-header\\\">Active</label>\\n            <div *ngIf=\\\"!editMode\\\" class=\\\"checkbox\\\" style=\\\"float:left; margin:5px;\\\">\\n\\n              <input type=\\\"checkbox\\\" class=\\\"form-control\\\" ngModel name=\\\"Active\\\">\\n            </div>\\n\\n\\n\\n          </fieldset>\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" *ngIf=\\\"!editMode\\\">Add Vendor</button>\\n\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Email</label>\\n\\n            <input type=\\\"email\\\" class=\\\"form-control\\\" ngModel name=\\\"Email\\\" required placeholder=\\\"Email\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            >\\n\\n          </fieldset>\\n\\n          <!-- <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Address</label>\\n\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"Address\\\" required placeholder=\\\"Address\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                        *ngIf=\\\"!editMode\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Address\\\" name=\\\"Address\\\" required placeholder=\\\"Address\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                        *ngIf=\\\"editMode\\\">\\n\\n\\n          </fieldset> -->\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Admin Comment</label>\\n            <textarea class=\\\"form-control\\\" ngModel name=\\\"AdminComment\\\" required placeholder=\\\"AdminComment\\\" rows=\\\"3\\\"\\n            ></textarea>\\n\\n          </fieldset>\\n\\n\\n\\n        </div>\\n\\n\\n  </div>\\n\\n\\n</form>\\n<form role=\\\"form\\\" (ngSubmit)=\\\"editVendor(f)\\\" #f=\\\"ngForm\\\" class=\\\"container\\\" *ngIf=\\\"editMode\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <fieldset class=\\\"form-group card mb-3\\\">\\n          <label class=\\\"card-header\\\">Vendor</label>\\n\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"Name\\\" name=\\\"Name\\\" required value=\\\"{{Name}}\\\">\\n          <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n      </fieldset>\\n      <fieldset class=\\\"form-group card mb-3\\\">\\n        <label class=\\\"card-header\\\">Vendor Description</label>\\n\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n          [(ngModel)]=\\\"Description\\\"\\n           name=\\\"Description\\\"\\n\\n          required\\n\\n          value=\\\"{{Description}}\\\" *ngIf=\\\"editMode\\\"></textarea>\\n    </fieldset>\\n    <fieldset class=\\\"form-group card mb-3\\\">\\n\\n      <label class=\\\"card-header\\\">Display Order</label>\\n\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Display_Order\\\" name=\\\"Display_Order\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n      *ngIf=\\\"editMode\\\">\\n    </fieldset>\\n    <fieldset class=\\\"form-group card mb-3\\\">\\n<label class=\\\"card-header\\\">Active</label>\\n\\n      <div  class=\\\"checkbox\\\" style=\\\"float:left; margin:5px;\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Active\\\" name=\\\"Active\\\">\\n      </div>\\n\\n    </fieldset>\\n\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\">Edit Vendor</button>\\n      \\n\\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n    <fieldset class=\\\"form-group card mb-3\\\">\\n      <label class=\\\"card-header\\\">Email</label>\\n\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Email\\\" name=\\\"Email\\\" required placeholder=\\\"Email\\\" min=\\\"1\\\" step=\\\"1\\\"\\n      >\\n\\n    </fieldset>\\n\\n    <!-- <fieldset class=\\\"form-group card mb-3\\\">\\n      <label class=\\\"card-header\\\">Address</label>\\n\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" ngModel name=\\\"Address\\\" required placeholder=\\\"Address\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                  *ngIf=\\\"!editMode\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"Address\\\" name=\\\"Address\\\" required placeholder=\\\"Address\\\" min=\\\"1\\\" step=\\\"1\\\"\\n                  *ngIf=\\\"editMode\\\">\\n\\n\\n    </fieldset> -->\\n    <fieldset class=\\\"form-group card mb-3\\\">\\n      <label class=\\\"card-header\\\">Admin Comment</label>\\n\\n      <textarea class=\\\"form-control\\\" [(ngModel)]=\\\"AdminComment\\\" name=\\\"AdminComment\\\" required placeholder=\\\"AdminComment\\\"\\n      >\\n    </textarea>\\n\\n    </fieldset>\\n\\n\\n\\n  </div>\\n\\n\\n</div>\\n\\n\\n</form>\\n  </div>\\n  </div>\\n <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                  <h2>Vendor List</h2>\\n                  <!-- <input type=\\\"text\\\" placeholder=\\\"Search By Name or Email\\\" [(ngModel)]=\\\"filteredVendor\\\" style=\\\"width:100%;\\\"> -->\\n                </div>\\n                <div class=\\\"card-block\\\" style=\\\"width:100%;\\\">\\n                    <table class=\\\"table table-bordered\\\" style=\\\"table-layout:fixed\\\">\\n                        <thead class=\\\"thead-inverse\\\">\\n                        <tr>\\n                            <th>Vendor Id</th>\\n                            <th>Vendor Name   </th>\\n                            <th>Vendor Description</th>\\n                            <th>Display Order</th>\\n                            <th>Email</th>\\n\\n                            <th>Admin Comment</th>\\n                            <th>Active</th>\\n                            <th>Action</th>\\n\\n\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor =\\\" let i = index ;let vendor of vendors\\\" >\\n\\n                          <td>{{vendor.Id}}</td>\\n                          <td>{{vendor.Name}}</td>\\n                          <td>{{vendor.Description}}</td>\\n                          <td>{{vendor.DisplayOrder}}</td>\\n                          <td>{{vendor.Email}}</td>\\n\\n                          <td>{{vendor.AdminComment}}</td>\\n                          <td *ngIf=\\\"vendor.Active\\\">Yes</td>\\n                          <td *ngIf=\\\"!vendor.Active\\\">No</td>\\n\\n                          <td><button type=\\\"button\\\" name=\\\"{{vendor.Id}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editVendorMode(c)\\\" #c><i class=\\\"fa fa-edit\\\"></i></button>\\n                          <button type=\\\"button\\\" name=\\\"{{vendor.Id}}\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteVendor(d)\\\" #d><i class=\\\"fa fa-times\\\"></i></button></td>\\n                        </tr>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n\\n\\n\\n    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.html\n// module id = ../../../../../src/app/layout/vendors/vendors.component.html\n// module chunks = 10","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.scss\n// module id = ../../../../../src/app/layout/vendors/vendors.component.scss\n// module chunks = 10","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { VendorService } from './vendor.service';\n@Component({\n    selector: 'app-vendors',\n    templateUrl: './vendors.component.html',\n    styleUrls: ['./vendors.component.scss']\n})\n\n/* This is still in development ! Has a lot bugs ! */\nexport class VendorsComponent implements OnInit {\n    @ViewChild('f') vendorForm: NgForm;\n    submitted = false;\n    vendor = [];\n    Id: number;\n    Name = '';\n    Description:string;\n    Email:string;\n    AdminComment:string;\n    Address:string;\n    Active:Number;\n    Display_Order:Number\n    editMode = false;\n    products;\n    filteredVendor='';\n    vendors;\n    PictureId:number;\n    imageUrl:string;\n\n    // filteredEmail='';\n\n    constructor(private vendorService : VendorService) {\n      this.PictureId=0;\n      this.imageUrl='';\n  }\n\n    ngOnInit() {\n      //   if(localStorage.getItem(\"vendors\")!=null){\n      //   this.vendor = JSON.parse(localStorage.getItem(\"vendors\"));\n      //\n      // }\n      this.getVendor();\n    }\n    addVendor() {\n        this.submitted = true;\n\n                this.Name = this.vendorForm.value.Name;\n                this.Description = this.vendorForm.value.Description;\n                this.Email = this.vendorForm.value.Email;\n                this.AdminComment = this.vendorForm.value.AdminComment;\n              //  this.Address = this.vendorForm.value.Address;\n                this.Display_Order = this.vendorForm.value.Display_Order;\n                this.Active = this.vendorForm.value.Active;\n                console.log(this.Active);\n                // this.Active = this.vendorForm.value.Active;\n\n            this.vendor.push({\n  \"Id\": 0,\n  \"Name\":this.Name,\n  \"Email\":this.Email,\n  \"Description\":this.Description,\n  \"PictureId\": this.PictureId,\n  \"AdminComment\":this.AdminComment,\n  \"Address\": {\n    \"Id\": 1,\n    \"CustomProperties\": {\n      \"sample string 1\": {},\n      \"sample string 3\": {}\n    },\n  \"Active\": this.Active,\n  \"DisplayOrder\": this.Display_Order,\n\n}\n});\n        //  localStorage.setItem(\"vendors\", JSON.stringify(this.vendor));\n            this.vendorService.storeVendor(this.vendor)\n            .subscribe(\n          (data)=>{\n            console.log(data);\n            alert(\"Added !\");\n            this.vendorForm.reset();\n            this.getVendor();\n          },\n          (error)=>{\n            alert(\"Failed to add !\");\n            console.log(error)}\n        );\n        //    alert(\"Added !\");\n            // console.log(this.vendor);\n            // this.vendorForm.reset();\n        }\n\n\n    editVendor() {\n        this.editMode = false;\n        this.Name = this.vendorForm.value.Name;\n        this.Description = this.vendorForm.value.Description;\n        this.Email = this.vendorForm.value.Email;\n        this.AdminComment = this.vendorForm.value.AdminComment;\n\n        this.Display_Order = this.vendorForm.value.Display_Order;\n        this.Active = this.vendorForm.value.Active;\n\n        this.vendor[\"Name\"] = this.Name;\n        this.vendor[\"Description\"] = this.Description;\n        this.vendor[\"Email\"] = this.Email;\n        this.vendor[\"AdminComment\"] = this.AdminComment;\n\n        this.vendor[\"DisplayOrder\"] = this.Display_Order;\n        this.vendor[\"Active\"] =this.Active;\n        this.vendorService.updateVendor(this.vendor)\n        .subscribe(\n      (data)=>{\n        console.log(data);\n        alert(\"Edited !\");\n        this.vendorForm.reset();\n        this.getVendor();\n      },\n      (error)=>{\n        alert(\"Failed to edit !\");\n        console.log(error)}\n    );\n\n    }\n    editVendorMode(id: HTMLFormElement) {\n        this.editMode = true;\n        this.Id = +id.name;\n        console.log(this.Id);\n        this.vendor = this.getCurrentVendor(this.Id)[0];\n        // console.log(this.vendor[1].Name);\n        this.Name = this.vendor[\"Name\"];\n        this.Description =this.vendor[\"Description\"];\n        this.Email = this.vendor[\"Email\"];\n        this.AdminComment =this.vendor[\"AdminComment\"];\n        this.Display_Order = this.vendor[\"DisplayOrder\"];\n        this.Active = this.vendor[\"Active\"];\n\n\n    }\n    deleteVendor(id:HTMLFormElement){\n        var confirmation = confirm(\"Are you sure you want to delete ?\");\n      if(confirmation){\n        this.vendorService.deleteVendor(+id.name)\n          .subscribe(\n          (data) => {\n\n            alert('Deleted !');\n            this.getVendor();\n          },\n          (error) => {\n            console.log(error)\n            alert('Can\\'t fetch data ! Please refresh or check your connnection !')\n          }\n          );\n      }\n    }\n    getVendor(){\n      this.vendorService.getVendor()\n      .subscribe(\n        (response)=>{\n          this.vendors = (response.json().Data);\n          //this.vendor = this.vendors.Data;\n          console.log((this.vendors));\n\n        //  this.attribute =[this.attributes];\n        },\n        (error)=>{\n          console.log(error)\n          alert(\"Can't fetch data ! Please refresh or check your connnection !\");\n        }\n      );\n\n    }\n    getCurrentVendor(id:number){\n      return this.vendors.filter(\n        function(vendor){ return vendor.Id == id }\n    );\n    }\n    getPictureDetails(file){\n          this.PictureId = file.serverResponse.json().pictureId;\n          this.imageUrl = file.serverResponse.json().imageUrl;\n      }\n    }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VendorsRoutingModule } from './vendors-routing.module';\nimport { VendorsComponent } from './vendors.component';\nimport { PageHeaderModule } from './../../shared';\nimport { FormsModule } from '@angular/forms';\nimport { FilterPipe } from './filter.pipe';\n\nimport { VendorService } from './vendor.service';\nimport { ImageUploadModule } from '../../../../node_modules/angular2-image-upload/src/image-upload.module';\n//import { FilterPipe } from './filter.pipe';\n// import { ImageUploadModule } from '../../../../node_modules/angular2-image-upload/src/image-upload.module';\n//import { Vendorservice } from './product.service';\n\n// import { ProductAttributesComponent } from './product-attributes/product-attributes.component';\n// import { SpecificationAttributesComponent } from './specification-attributes/specification-attributes.component';\n// import { ProductTagsModule } from './product-tags/product-tags.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VendorsRoutingModule,\n    PageHeaderModule,\n    FormsModule,\n      ImageUploadModule.forRoot()\n    // ImageUploadModule.forRoot()\n    // ProductTagsModule\n  ],\n  providers:[VendorService],\n  declarations: [VendorsComponent, FilterPipe ]\n})\nexport class VendorsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/vendors/vendors.module.ts"],"sourceRoot":"webpack:///"}