webpackJsonp([8],{"5qwX":function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r("/oeL"),s=r("qbdv"),a=r("70zo"),o=r("Vk+q"),i=r("gOac"),d=r("bm2B"),l=r("nWH4"),c=r("iz04"),h=r("zHfv"),p=r("DjFD");r.d(t,"OrdersModule",function(){return m});var u=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,r,o):s(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},m=function(){function e(){}return e}();m=u([r.i(n.NgModule)({imports:[s.k,a.a,i.b,d.a,c.a,p.MyDatePickerModule],providers:[h.a,s.l],declarations:[o.a,l.a]})],m)},"70zo":function(e,t,r){"use strict";var n=r("/oeL"),s=r("BkNc"),a=r("Vk+q");r.d(t,"a",function(){return d});var o=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,r,o):s(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},i=[{path:"",component:a.a}],d=function(){function e(){}return e}();d=o([r.i(n.NgModule)({imports:[s.a.forChild(i)],exports:[s.a]})],d)},C6r3:function(e,t){e.exports='<div class="container">\n<h1> Order Management </h1>\n     <hr>\n    <div class="row" *ngIf="editMode">\n      <div class="col-lg-6" style="float: none; margin: 0 auto;">\n        <fieldset class="form-group card mb-3">\n                  <label class="card-header">Order Status</label>\n                  <p class="card-text" style="text-align:center">{{OrderStatus}}</p>\n                  <select name="OrderStatus" class="form-control" ngModel (ngModelChange)="changeOrderStatus($event)">\n                    <option value="0">Select Status</option>  \n                    <option value="10">Pending</option>\n                    <option value="20">Processing </option>\n                    <option value="30">Complete</option>\n                    <option value="40">Cancelled</option>\n                  </select>\n        </fieldset>\n\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Shipping Status</label>\n                    <p class="card-text" style="text-align:center">{{ShippingStatus}}</p>\n          </fieldset>\n\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Payment Status</label>\n                    <p class="card-text" style="text-align:center">{{PaymentStatus}}</p>\n                    \x3c!-- <select class="form-control" ngModel name="PaymentStatus" (ngModelChange)="changePaymentStatus($event)">\n                            <option value="10">Pending</option>\n                            <option value="20">Authorized</option>\n                            <option value="30">Paid</option>\n                            <option value="35">Partially Refunded</option>\n                            <option value="40">Refunded</option>\n                            <option value="50">Voided</option>\n                          </select> --\x3e\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Order Total</label>\n                    <p class="card-text" style="text-align:center">{{OrderTotal}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Customer Full Name</label>\n                    <p class="card-text" style="text-align:center">{{CustomerFullName}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Customer Email</label>\n                    <p class="card-text" style="text-align:center">{{CustomerEmail}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Customer Ip</label>\n                    <p class="card-text" style="text-align:center">{{CustomerIp}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Store Name</label>\n                    <p class="card-text" style="text-align:center">{{StoreName}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Shipping Address</label>\n                    <p class="card-text" style="text-align:center">{{ShippingAddress}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Billing Address</label>\n                    <p class="card-text" style="text-align:center">{{BillingAddress}}</p>\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Items</label>\n                    <ul style="list-style:none">\n                      <li *ngFor="let item of Items">\n                        <p class="card-text" style="text-align:center">{{item}}</p>\n                      </li>\n                    </ul>\n\n          </fieldset>\n          <fieldset class="form-group card mb-3">\n                    <label class="card-header">Created On</label>\n                    <p class="card-text" style="text-align:center">{{CreatedOn | date}}</p>\n          </fieldset>\n          <button class="btn btn-success" (click)="showSearch()">Search Form</button>\n\n      </div>\n    </div>\n\n\n\n    <div class="row" *ngIf="searchMode">\n      <div class="col-lg-6" style="float: none; margin: 0 auto;">\n\n            <form role="form" (ngSubmit)="searchOrder(s)" #s="ngForm">\n\n\n\n                <fieldset class="form-group card mb-3">\n                    <label class="card-header">Billing Last Name</label>\n                    <input class="form-control" ngModel name="BillingLastName" placeholder="Billing Last Name">\n                </fieldset>\n                <fieldset class="form-group card mb-3">\n                    <label class="card-header">Billing Email</label>\n                    <input type="text" class="form-control" ngModel name="BillingEmail"  placeholder="Enter Customer Email" >\n                </fieldset>\n                \x3c!-- <fieldset class="form-group card mb-3">\n                    <label class="card-header">Store</label>\n                    <input type="text" class="form-control" ngModel name="StoreName"  placeholder="Enter Store Name" >\n\n                </fieldset> --\x3e\n                <fieldset class="form-group card mb-3">\n                    <label class="card-header">Order Status</label>\n                    <select class="form-control" ngModel name="OrderStatus">\n                          <option value="10">Pending</option>\n                          <option value="20">Processing </option>\n                          <option value="30">Complete</option>\n                          <option value="40">Cancelled</option>\n\n                                    </select>\n                </fieldset>\n                \x3c!-- <fieldset class="form-group card mb-3">\n                    <label class="card-header">Shipping Status</label>\n                    <input type="number" class="form-control" ngModel name="StockQuantity" >\n                </fieldset> --\x3e\n\n\n\n\n\n\n\n                <fieldset class="form-group card mb-3">\n                    <label class="card-header">Payment Status</label>\n                    <select class="form-control" ngModel name="PaymentStatus">\n                          <option value="10">Pending</option>\n                          <option value="20">Authorized</option>\n                          <option value="30">Paid</option>\n                          <option value="35">Partially Refunded</option>\n                          <option value="40">Refunded</option>\n                          <option value="50">Voided</option>\n                        </select>\n                </fieldset>\n                <fieldset class="form-group card mb-3">\n                    <label for="" class="card-header">Start Date</label>\n                \n                  <my-date-picker name="startDate" [options]="myDatePickerOptions" (dateChanged)="onStartDateChanged($event)"></my-date-picker>\n                 </fieldset>\n                 <fieldset class="form-group card mb-3">\n                    <label for="" class="card-header">End Date</label>\n                \n                  <my-date-picker name="endDate" [options]="myDatePickerOptions" (dateChanged)="onEndDateChanged($event)"></my-date-picker>\n                 </fieldset>\n\n                <img [src]="loadingImagePath" *ngIf="loadingOrder" alt="">\n                <button type="submit" class="btn btn-primary" [disabled]="!s.valid" >Search Order</button>\n\n\n\n\n            </form>\n      </div>\n    </div>\n</div>\n\n    <div class="row" *ngIf="showAllOrders">\n        <div class="card mb-3">\n                <div class="card-header">\n                  <h2>Order</h2>\n                </div>\n                <div class="card-block" style="width:100%;">\n                    <table class="table table-bordered" style="table-layout:fixed">\n                        <thead class="thead-inverse">\n                        <tr>\n\n                            <th>Order Status</th>\n                            <th>Payment Status</th>\n                            <th>Shipping Status</th>\n                            <th>Customer</th>\n                            <th>Created On</th>\n                            <th>Total</th>\n                            <th>Action</th>\n\n\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor ="let order of orderList | paginate: { id:\'Orders\', itemsPerPage: 10, currentPage: currentPageNumber , totalItems: totalOrders}">\n                          <td>{{order.OrderStatus}}</td>\n                          <td>{{order.PaymentStatus}}</td>\n                          <td>{{order.ShippingStatus}}</td>\n                          <td>{{order.CustomerFullName}}</td>\n                          <td>{{order.CreatedOn | date}}</td>\n                          <td>{{order.OrderTotal}}</td>\n                          <td><button type="button" name="{{order.Id}}" class="btn btn-primary" (click)="editOrderMode(c)" #c><i class="fa fa-edit"></i></button></td>\n                        </tr>\n\n\n                        </tbody>\n                    </table>\n                    <img [src]="loadingImagePath" *ngIf="loadingOrder" alt="">\n                    <pagination-controls (pageChange)="getOrders($event)" id="Orders"></pagination-controls>\n                </div>\n            </div>\n\n\n\n    </div>\n    <div class="row" *ngIf="searchList">\n        <div class="card mb-3">\n                <div class="card-header">\n                  <h2>Order</h2>\n                  <button (click)="showAll()" class="btn btn-success">Show All Orders </button>\n                </div>\n                <div class="card-block" style="width:100%;">\n                    <table class="table table-bordered" style="table-layout:fixed">\n                        <thead class="thead-inverse">\n                        <tr>\n\n                            <th>Order Status</th>\n                            <th>Payment Status</th>\n                            <th>Shipping Status</th>\n                            <th>Customer</th>\n                            <th>Created On</th>\n                            <th>Total</th>\n                            <th>Action</th>\n\n\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <tr *ngFor ="let order of searchedOrders | paginate: { id:\'SearchedOrders\', itemsPerPage: 10, currentPage: currentPageNumber , totalItems: totalOrders}">\n                          <td>{{order.OrderStatus}}</td>\n                          <td>{{order.PaymentStatus}}</td>\n                          <td>{{order.ShippingStatus}}</td>\n                          <td>{{order.CustomerFullName}}</td>\n                          <td>{{order.CreatedOn | date}}</td>\n                          <td>{{order.OrderTotal}}</td>\n                          <td><button type="button" name="{{order.Id}}" class="btn btn-primary" (click)="editOrderMode(c)" #c><i class="fa fa-edit"></i></button></td>\n                        </tr>\n\n\n                        </tbody>\n                    </table>\n                    <img [src]="loadingImagePath" *ngIf="loadingOrder" alt="">\n                    <pagination-controls (pageChange)="searchOrder($event)" id="SearchedOrders"></pagination-controls>\n                </div>\n            </div>\n\n\n\n    </div>\n'},"Vk+q":function(e,t,r){"use strict";var n=r("/oeL"),s=r("bm2B"),a=r("CPp0"),o=r("zHfv");r.d(t,"a",function(){return l});var i=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,r,o):s(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},d=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},l=function(){function e(e,t){this.http=e,this.ordersService=t,this.orderList=[],this.StoreName="",this.BillingEmail="",this.BillingLastName="",this.CustomerIp="",this.OrderTotal="",this.OrderStatus="",this.PaymentStatus="",this.ShippingStatus="",this.ShippingAddress="",this.BillingAddress="",this.Items=[],this.searchedOrders=[],this.searchParameters={},this.CustomerFullName="",this.CustomerEmail="",this.myDatePickerOptions={dateFormat:"dd.mm.yyyy"},this.orderDetails=[],this.loadingOrder=!1,this.currentPageNumber=1,this.OrderId=0,this.editMode=!1,this.loadingImagePath="../../assets/images/ajax-loader.gif",this.searchMode=!0,this.showAllOrders=!0,this.searchList=!1}return e.prototype.ngOnInit=function(){this.getOrders(1)},e.prototype.getOrders=function(e){var t=this;this.loadingOrder=!0,this.editMode=!1,this.ordersService.getOrders(e).subscribe(function(r){t.loadingOrder=!1,t.currentPageNumber=e,t.orderList=r.json().Data,console.log(t.orderList),t.totalOrders=r.json().Total},function(e){console.log(e),alert("Can't fetch data ! Please refresh or check your connnection !"),t.loadingOrder=!1})},e.prototype.editOrderMode=function(e){this.editMode=!0,this.searchMode=!1,this.OrderId=+e.name,this.order=this.getCurrentOrder(this.OrderId)[0],this.StoreName=this.order.StoreName,this.CustomerEmail=this.order.CustomerEmail,this.CustomerFullName=this.order.CustomerFullName,this.CustomerIp=this.order.CustomerIp,this.OrderTotal=this.order.OrderTotal,this.OrderStatus=this.order.OrderStatus,this.PaymentStatus=this.order.PaymentStatus,this.ShippingStatus=this.order.ShippingStatus,this.ShippingAddress=this.order.ShippingAddress,this.BillingAddress=this.order.BillingAddress,this.Items=this.order.Items,console.log(this.Items),this.CreatedOn=new Date(this.order.CreatedOn).toString()},e.prototype.getCurrentOrder=function(e){return this.orderList.filter(function(t){return t.Id==e})},e.prototype.showSearch=function(){this.editMode=!1,this.searchMode=!0,this.getOrders(this.currentPageNumber)},e.prototype.showAllProducts=function(){this.showAllOrders=!0,this.searchList=!1},e.prototype.searchOrder=function(e){var t=this;this.loadingOrder=!0,this.order=[],this.BillingLastName=this.searchForm.value.BillingLastName,this.BillingEmail=this.searchForm.value.BillingEmail,this.OrderStatus=this.searchForm.value.OrderStatus,this.PaymentStatus=this.searchForm.value.PaymentStatus,this.searchParameters={BillingLastName:this.BillingLastName,BillingEmail:this.BillingEmail,OrderStatusIds:[+this.OrderStatus],PaymentStatusIds:[+this.PaymentStatus],StartDate:this.startDate,EndDate:this.endDate},this.ordersService.searchOrders(this.searchParameters,e-1).subscribe(function(e){t.loadingOrder=!1,t.showAllOrders=!1,t.searchList=!0,t.searchedOrders=e.json().Data,t.searchForm.reset(),console.log(t.searchedOrders)},function(e){console.log(e),alert("Can't fetch data ! Please refresh or check your connnection !"),t.loadingOrder=!1,t.searchForm.reset()})},e.prototype.getShippingAddress=function(){var e=this;this.ordersService.getShippingAddress(this.OrderId).subscribe(function(t){console.log(t),e.ShippingAddress=t.json()},function(e){console.log(e),alert("Can't fetch Shipping Address ! Please refresh or check your connnection !")})},e.prototype.changeOrderStatus=function(e){var t=this;console.log(e),this.ordersService.changeOrderStatus(this.OrderId,e).subscribe(function(e){t.OrderStatus=e.json().OrderStatus,alert("Updated Order Status !"),console.log(e.json())},function(e){console.log(e),alert("Can't change order status ! Please refresh or check your connnection !")})},e.prototype.changeShippingStatus=function(e){var t=this;console.log(e),this.ordersService.changeShippingStatus(this.OrderId,e).subscribe(function(e){t.ShippingStatus=e.json().ShippingStatus},function(e){console.log(e),alert("Can't change Shipping status ! Please refresh or check your connnection !")})},e.prototype.changePaymentStatus=function(e){var t=this;console.log(e),this.ordersService.changePaymentStatus(this.OrderId,e).subscribe(function(e){t.PaymentStatus=e.json().PaymentStatus,console.log(e.json())},function(e){console.log(e),alert("Can't change Payment status ! Please refresh or check your connnection !")})},e.prototype.onStartDateChanged=function(e){this.startDate=new Date(e.jsdate).toLocaleDateString()},e.prototype.onEndDateChanged=function(e){this.endDate=new Date(e.jsdate).toLocaleDateString()},e.prototype.showAll=function(){this.showAllOrders=!0,this.editMode=!1,this.searchMode=!0,this.searchList=!1},e}();i([r.i(n.ViewChild)("f"),d("design:type","function"==typeof(c=void 0!==s.b&&s.b)&&c||Object)],l.prototype,"ordersForm",void 0),i([r.i(n.ViewChild)("s"),d("design:type","function"==typeof(h=void 0!==s.b&&s.b)&&h||Object)],l.prototype,"searchForm",void 0),l=i([r.i(n.Component)({selector:"app-orders",template:r("C6r3"),styles:[r("yaMm")]}),d("design:paramtypes",["function"==typeof(p=void 0!==a.b&&a.b)&&p||Object,"function"==typeof(u=void 0!==o.a&&o.a)&&u||Object])],l);var c,h,p,u},nWH4:function(e,t,r){"use strict";var n=r("/oeL");r.d(t,"a",function(){return a});var s=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,r,o):s(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},a=function(){function e(){}return e.prototype.transform=function(e,t){return null},e}();a=s([r.i(n.Pipe)({name:"filter"})],a)},yaMm:function(e,t,r){t=e.exports=r("rP7Y")(!1),t.push([e.i,"",""]),e.exports=e.exports.toString()},zHfv:function(e,t,r){"use strict";var n=r("/oeL"),s=r("CPp0");r.d(t,"a",function(){return i});var a=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,o=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,r,n);else for(var i=e.length-1;i>=0;i--)(s=e[i])&&(o=(a<3?s(o):a>3?s(t,r,o):s(t,r))||o);return a>3&&o&&Object.defineProperty(t,r,o),o},o=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},i=function(){function e(e){this.http=e,this.Token=localStorage.getItem("Token"),this.headers=new s.c({"Content-Type":"application/json",Accept:"application/json",Authorization:"Token "+this.Token})}return e.prototype.getOrders=function(e){new s.c({"Content-Type":"application/json",Accept:"application/json",Authorization:"Token "+this.Token});return this.http.post("http://denmakers2-001-site1.gtempurl.com/api/orders/OrderList",{Page:e,PageSize:10},{headers:this.headers})},e.prototype.searchOrders=function(e,t){return console.log(e),this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Orders/OrderList",e,{headers:this.headers})},e.prototype.updateOrder=function(e,t){return console.log(e),this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Customers/EditOrder",e[t],{headers:this.headers})},e.prototype.deleteOrder=function(e){return console.log("Id = "+e),this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Customers/DeleteOrder?id="+e,null,{headers:this.headers})},e.prototype.getShippingAddress=function(e){return this.http.get("http://denmakers2-001-site1.gtempurl.com/api/Orders/"+e+"/BillingAddress",{headers:this.headers})},e.prototype.changeOrderStatus=function(e,t){return this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Orders/ChangeOrderStatus",{Id:e,OrderStatusId:t},{headers:this.headers})},e.prototype.changeShippingStatus=function(e,t){return this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Orders/ChangeOrderStatus",{Id:e,ShippingStatusId:t},{headers:this.headers})},e.prototype.changePaymentStatus=function(e,t){return this.http.post("http://denmakers2-001-site1.gtempurl.com/api/Orders/ChangeOrderStatus",{Id:e,PaymentStatusId:t},{headers:this.headers})},e}();i=a([r.i(n.Injectable)(),o("design:paramtypes",["function"==typeof(d=void 0!==s.b&&s.b)&&d||Object])],i);var d}});