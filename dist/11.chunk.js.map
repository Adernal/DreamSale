{"version":3,"sources":["/home/elliot/Projects/Freelance/DS/src/app/layout/stores/filter.pipe.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores-routing.module.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.html","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.scss","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.module.ts","/home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAoD;AAMpD,IAAa,UAAU;IAAvB;IAeA,CAAC;IAbC,8BAAS,GAAT,UAAU,KAAU,EAAE,cAAsB,EAAE,QAAiB;QAC7D,EAAE,EAAC,KAAK,CAAC,MAAM,KAAG,CAAC,IAAI,cAAc,KAAG,EAAE,CAAC,EAAC;YAC1C,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,IAAM,WAAW,GAAC,EAAE,CAAC;QACrB,GAAG,EAAe,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAnB,IAAM,IAAI;YACV,EAAE,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAE,CAAC,CAAC,EAAC;gBACxE,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;SACJ;QACD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAEH,iBAAC;AAAD,CAAC;AAfY,UAAU;IAJtB,0EAAI,CAAC;QACJ,IAAI,EAAE,QAAQ;QACd,IAAI,EAAC,KAAK;KACX,CAAC;GACW,UAAU,CAetB;AAfsB;;;;;;;;;;;;;;;;;;;ACNkB;AACc;AAEF;AAGrD,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,0EAAe,EAAE;CAE3C,CAAC;AAMF,IAAa,mBAAmB;IAAhC;IAAmC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAvB,mBAAmB;IAJ/B,8EAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;KAC1B,CAAC;GACW,mBAAmB,CAAI;AAAJ;;;;;;;;ACfhC,8mBAA8mB,MAAM,kgBAAkgB,aAAa,ytBAAytB,gBAAgB,uwBAAuwB,oBAAoB,2eAA2e,YAAY,wcAAwc,KAAK,+lCAA+lC,yuBAAyuB,YAAY,uCAAuC,mBAAmB,uCAAuC,0BAA0B,uCAAuC,WAAW,uCAAuC,oBAAoB,sEAAsE,UAAU,gKAAgK,UAAU,0Q;;;;;;;ACAj4L;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;ACX8D;AAGtB;AACS;AAOjD,IAAa,eAAe;IAkB1B,yBAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;QAf/C,cAAS,GAAG,KAAK,CAAC;QAClB,UAAK,GAAG,EAAE,CAAC;QAEX,SAAI,GAAG,EAAE,CAAC;QACV,mBAAc,GAAG,EAAE,CAAC;QACpB,gBAAW,GAAC,EAAE,CAAC;QACf,eAAU,GAAC,EAAE,CAAC;QACd,uBAAkB,GAAC,EAAE,CAAC;QACtB,QAAG,GAAC,EAAE,CAAC;QAEP,aAAQ,GAAG,KAAK,CAAC;QACjB,mBAAc,GAAG,EAAE,CAAC;QAEpB,iBAAY,GAAC,EAAE,CAAC;IAEkC,CAAC;IAEnD,kCAAQ,GAAR;QACE,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,mCAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;QAEpB,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;gBACZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACtD,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC;YACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC;YAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC;YAClE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC;YAClD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACtB,IAAI,EAAC,CAAC;gBACN,kBAAkB,EAAE,EAAE;gBACtB,MAAM,EAAE,IAAI,CAAC,IAAI;gBACjB,KAAK,EAAE,IAAI,CAAC,GAAG;gBACf,YAAY,EAAE,KAAK;gBACnB,WAAW,EAAE,IAAI;gBACjB,OAAO,EAAE,gBAAgB;gBACzB,mBAAmB,EAAE,CAAC;gBACtB,oBAAoB,EAAE;oBAClB;wBACI,UAAU,EAAE,KAAK;wBACjB,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE,KAAK;wBACjB,MAAM,EAAE,KAAK;wBACb,OAAO,EAAE,GAAG;qBACf;oBACD;wBACI,UAAU,EAAE,KAAK;wBACjB,OAAO,EAAE,IAAI;wBACb,UAAU,EAAE,KAAK;wBACjB,MAAM,EAAE,SAAS;wBACjB,OAAO,EAAE,GAAG;qBACf;iBACJ;gBACD,cAAc,EAAE,IAAI,CAAC,YAAY;gBACjC,aAAa,EAAE,IAAI,CAAC,WAAW;gBAC/B,gBAAgB,EAAE,IAAI,CAAC,cAAc;gBACrC,oBAAoB,EAAE,IAAI,CAAC,cAAc;gBACzC,YAAY,EAAE,IAAI,CAAC,UAAU;gBAC7B,SAAS,EAAE,EAAE;aAChB,CAAC,CAAC;YACK,4DAA4D;YAC9D,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;iBACtC,SAAS,CACV,UAAC,IAAI;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAK,CAAC,SAAS,CAAC,CAAC;YACnB,CAAC,EACD,UAAC,KAAK;gBACJ,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,CAAC,CACA,CAAC;YACH,0BAA0B;YAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC;IAEH,CAAC;IACD,wCAAc,GAAd,UAAe,EAAmB;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnD,uBAAuB;QACvB,mCAAmC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;QAClE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;IAGxD,CAAC;IACD,oCAAU,GAAV;QAAA,iBAmCC;QAlCC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC;QAC1D,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,kBAAkB,CAAC;QAClE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC;QAGtD,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACpD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC1D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClE,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAEtD,6DAA6D;QAC7D,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;aACvC,SAAS,CACV,UAAC,IAAI;YAEH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAEzB,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAK,CAAC,UAAU,CAAC,CAAC;QACpB,CAAC,EACD,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAK,CAAC,gEAAgE,CAAC,CAAC;QAC1E,CAAC,CACA,CAAC;IAEN,CAAC;IACD,mCAAS,GAAT;QAAA,iBAeC;QAdD,4DAA4D;QAC1D,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;aAC1B,SAAS,CACV,UAAC,QAAQ;YACP,KAAI,CAAC,MAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAChC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5B,CAAC,EACD,UAAC,KAAK;YACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YAClB,KAAK,CAAC,gEAAgE,CAAC,CAAC;QAC1E,CAAC,CACA,CAAC;IAEN,CAAC;IACD,sCAAY,GAAZ,UAAa,EAAmB;QAAhC,iBAqBC;QApBC,IAAM,YAAY,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;QAClE,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC;iBACrC,SAAS,CACV,UAAC,IAAI;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAElB,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAK,CAAC,WAAW,CAAC,CAAC;YACrB,CAAC,EACD,UAAC,KAAK;gBACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,CAAC,gEAAgE,CAAC;YACzE,CAAC,CACA,CAAC;QACN,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAExB,CAAC;IACH,CAAC;IACD,uCAAa,GAAb,UAAc,EAAS;QACtB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CACpB,UAAS,KAAK,IAAG,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,EAAC,CAAC,CAC3C,CAAC;IACJ,CAAC;IAEF,sBAAC;AAAD,CAAC;AA/LiB;IAAf,+EAAS,CAAC,GAAG,CAAC;kDAAY,8DAAM,oBAAN,8DAAM;kDAAC;AAFvB,eAAe;IAL3B,+EAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,2FAAsC;QACtC,2FAAsC;KACvC,CAAC;yDAmBkC,sEAAa,oBAAb,sEAAa;GAlBpC,eAAe,CAiM3B;AAjM2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACM;AAEe;AACT;AACH;AACL;AACF;AACM;AAejD,IAAa,YAAY;IAAzB;IAA4B,CAAC;IAAD,mBAAC;AAAD,CAAC;AAAhB,YAAY;IAZxB,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,qEAAY;YACZ,mFAAmB;YACnB,iEAAgB;YAChB,mEAAW;SAGZ;QACD,SAAS,EAAC,CAAC,sEAAa,CAAC;QACzB,YAAY,EAAE,CAAC,0EAAe,EAAE,gEAAU,CAAC;KAC5C,CAAC;GACW,YAAY,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;ACvBkB;AACG;AAG9C,IAAa,aAAa;IAEtB,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IACnC,mCAAW,GAAX,UAAY,KAAK;QACb,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yFAAyF,EAAE,IAAI,CAAC,IAAI,EACtH,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAE9B,CAAC;IACD,iCAAS,GAAT;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;IACnF,CAAC;IACD,oCAAY,GAAZ,UAAa,KAAK;QACd,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uFAAuF,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChJ,CAAC;IACD,oCAAY,GAAZ,UAAa,EAAE;QACX,IAAM,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;QAC1B,qBAAqB;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wEAAwE,GAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACnI,CAAC;IAGL,oBAAC;AAAD,CAAC;AA1BY,aAAa;IADzB,gFAAU,EAAE;yDAGiB,2DAAI,oBAAJ,2DAAI;GAFrB,aAAa,CA0BzB;AA1ByB","file":"11.chunk.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure:false,\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, filteredStores: string ,propName : string): any {\n    if(value.length===0 || filteredStores===''){\n      return value;\n    }\n    const resultArray=[];\n    for(const item of value){\n        if(item[propName].toLowerCase().indexOf(filteredStores.toLowerCase())>=0){\n          resultArray.push(item);\n        }\n    }\n    return resultArray;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/filter.pipe.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StoresComponent } from './stores.component';\n\n\nconst routes: Routes = [\n    { path: '', component: StoresComponent },\n\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class StoresRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores-routing.module.ts","module.exports = \"<div class=\\\"container\\\">\\n<h1>  Store Management </h1>\\n     <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n      <form role=\\\"form\\\" (ngSubmit)=\\\"addStores(f)\\\" #f=\\\"ngForm\\\" class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6\\\">\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n                <label class=\\\"card-header\\\">Store Name</label>\\n                <input class=\\\"form-control\\\" ngModel name=\\\"Name\\\" required placeholder=\\\"Enter Store Name\\\" *ngIf=\\\"!editMode\\\">\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"Name\\\" name=\\\"Name\\\" required value=\\\"{{Name}}\\\" *ngIf=\\\"editMode\\\">\\n                <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n            </fieldset>\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n                <label class=\\\"card-header\\\">Company Name</label>\\n                <input class=\\\"form-control\\\" ngModel name=\\\"CompanyName\\\" required placeholder=\\\"Enter Store Name\\\" *ngIf=\\\"!editMode\\\">\\n                <input class=\\\"form-control\\\" [(ngModel)]=\\\"CompanyName\\\" name=\\\"CompanyName\\\" required value=\\\"{{CompanyName}}\\\" *ngIf=\\\"editMode\\\">\\n                <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n            </fieldset>\\n\\n\\n            <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Company Address</label>\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n              ngModel\\n               name=\\\"CompanyAddress\\\"\\n\\n              required\\n\\n              placeholder=\\\"Company Address\\\"\\n                *ngIf=\\\"!editMode\\\"\\n              ></textarea>\\n              <textarea class=\\\"form-control\\\" rows=\\\"3\\\"\\n\\n              [(ngModel)]=\\\"CompanyAddress\\\"\\n               name=\\\"CompanyAddress\\\"\\n\\n              required\\n\\n              value=\\\"{{CompanyAddress}}\\\" *ngIf=\\\"editMode\\\"></textarea>\\n          </fieldset>\\n\\n\\n\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" *ngIf=\\\"!editMode\\\">Add Store</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!f.valid\\\" *ngIf=\\\"editMode\\\">Edit Store</button>\\n            \\n\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Company Phone</label>\\n              <input class=\\\"form-control\\\" ngModel name=\\\"CompanyPhoneNumber\\\" required placeholder=\\\"Company Phone Number\\\" *ngIf=\\\"!editMode\\\">\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"CompanyPhoneNumber\\\" name=\\\"CompanyPhoneNumber\\\" required value=\\\"{{CompanyPhoneNumber}}\\\" *ngIf=\\\"editMode\\\">\\n              <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n          </fieldset>\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Company Vat</label>\\n              <input class=\\\"form-control\\\" ngModel name=\\\"CompanyVat\\\" required placeholder=\\\"Enter Vat\\\" *ngIf=\\\"!editMode\\\">\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"CompanyVat\\\" name=\\\"CompanyVat\\\" required value=\\\"{{CompanyVat}}\\\" *ngIf=\\\"editMode\\\">\\n              <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n          </fieldset>\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n              <label class=\\\"card-header\\\">Url</label>\\n              <input class=\\\"form-control\\\" ngModel name=\\\"Url\\\" required placeholder=\\\"Url\\\" *ngIf=\\\"!editMode\\\">\\n              <input class=\\\"form-control\\\" [(ngModel)]=\\\"Url\\\" name=\\\"Url\\\" required value=\\\"{{Url}}\\\" *ngIf=\\\"editMode\\\">\\n              <!-- <p class=\\\"help-block\\\">Example block-level help text here.</p> -->\\n          </fieldset>\\n\\n          <fieldset class=\\\"form-group card mb-3\\\">\\n            <label class=\\\"card-header\\\">Display Order</label>\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" ngModel name=\\\"DisplayOrder\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            *ngIf=\\\"!editMode\\\">\\n            <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"DisplayOrder\\\" name=\\\"DisplayOrder\\\" required placeholder=\\\"Enter Display Order\\\" min=\\\"1\\\" step=\\\"1\\\"\\n            *ngIf=\\\"editMode\\\">\\n        </fieldset>\\n\\n        </div>\\n\\n\\n  </div>\\n</form>\\n  </div>\\n</div>\\n <hr>\\n    <div class=\\\"row\\\">\\n\\n\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header\\\">\\n                    <h2>Store List</h2>\\n                    <input type=\\\"text\\\" placeholder=\\\"Search Store\\\" [(ngModel)]=\\\"filteredStores\\\" style=\\\"width:100%\\\">\\n                </div>\\n                <div class=\\\"card-block table-responsive\\\" style=\\\"width:100%;\\\">\\n                    <table class=\\\"table table-bordered\\\" style=\\\"table-layout:fixed\\\">\\n                        <thead class=\\\"thead-inverse\\\">\\n                        <tr>\\n                          \\n                            <th>Store Name</th>\\n                            <th>Company Name</th>\\n                            <th>Company Phone Number</th>\\n                            <th>Url</th>\\n                            <th>Display Order</th>\\n                            <th>Action</th>\\n\\n\\n\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor =\\\"let store of store | filter : filteredStores : 'Name'\\\">\\n\\n\\n                          <td>{{store.Name}}</td>\\n                          <td>{{store.CompanyName}}</td>\\n                          <td>{{store.CompanyPhoneNumber}}</td>\\n                          <td>{{store.Url}}</td>\\n                          <td>{{store.DisplayOrder}}</td>\\n                          <td><button type=\\\"button\\\" name=\\\"{{store.Id}}\\\" class=\\\"btn btn-primary\\\" (click)=\\\"editStoresMode(c)\\\" #c><i class=\\\"fa fa-edit\\\"></i></button>\\n                          <button type=\\\"button\\\" name=\\\"{{store.Id}}\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteStores(d)\\\" #d><i class=\\\"fa fa-times\\\"></i></button></td>\\n\\n                        </tr>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n\\n\\n\\n    </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.html\n// module id = ../../../../../src/app/layout/stores/stores.component.html\n// module chunks = 11","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.scss\n// module id = ../../../../../src/app/layout/stores/stores.component.scss\n// module chunks = 11","import { Component, OnInit , ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { StoresService } from './stores.service';\n\n@Component({\n  selector: 'app-stores',\n  templateUrl: './stores.component.html',\n  styleUrls: ['./stores.component.scss']\n})\nexport class StoresComponent implements OnInit {\n\n  @ViewChild('f') storeForm: NgForm;\n  submitted = false;\n  store = [];\n  Id: Number;\n  Name = '';\n  CompanyAddress = '';\n  CompanyName='';\n  CompanyVat='';\n  CompanyPhoneNumber='';\n  Url='';\n  DisplayOrder: Number;\n  editMode = false;\n  filteredStores = '';\n  stores;\n  currentStore=[];\n\n  constructor(private storeService: StoresService) {}\n\n  ngOnInit() {\n    localStorage.removeItem(\"stores\");\n    this.getStores();\n  }\n  addStores() {\n    this.submitted = true;\n    if (this.editMode) {\n      this.editStores();\n\n    }\n    else {\n      if (this.store.length == 0) {\n        this.Id = 1;\n        console.log(this.Id);\n      }\n      else {\n        this.Id = +this.store[this.store.length - 1].Id + 1;\n      }\n\n      this.Name = this.storeForm.value.Name;\n      this.CompanyName = this.storeForm.value.CompanyName;\n      this.CompanyAddress = this.storeForm.value.CompanyAddress;\n      this.CompanyVat = this.storeForm.value.CompanyVat;\n      this.CompanyPhoneNumber = this.storeForm.value.CompanyPhoneNumber;\n      this.Url = this.storeForm.value.Url;\n      this.DisplayOrder = this.storeForm.value.DisplayOrder;\n          this.store.push({\n    \"Id\":0,\n    \"CustomProperties\": {},\n    \"Name\": this.Name,\n    \"Url\": this.Url,\n    \"SslEnabled\": false,\n    \"SecureUrl\": null,\n    \"Hosts\": \"www.google.com\",\n    \"DefaultLanguageId\": 0,\n    \"AvailableLanguages\": [\n        {\n            \"Disabled\": false,\n            \"Group\": null,\n            \"Selected\": false,\n            \"Text\": \"---\",\n            \"Value\": \"0\"\n        },\n        {\n            \"Disabled\": false,\n            \"Group\": null,\n            \"Selected\": false,\n            \"Text\": \"English\",\n            \"Value\": \"1\"\n        }\n    ],\n    \"DisplayOrder\": this.DisplayOrder,\n    \"CompanyName\": this.CompanyName,\n    \"CompanyAddress\": this.CompanyAddress,\n    \"CompanyPhoneNumber\": this.CompanyAddress,\n    \"CompanyVat\": this.CompanyVat,\n    \"Locales\": []\n});\n        //localStorage.setItem(\"stores\",JSON.stringify(this.store));\n      this.storeService.storeStores(this.store)\n        .subscribe(\n        (data) => {\n          console.log(data);\n          alert('Added !');\n        },\n        (error) => {\n          alert('Failed to add !');\n          console.log(error)\n        }\n        );\n       //this.stores.store=store;\n      console.log(this.store);\n      this.storeForm.reset();\n    }\n\n  }\n  editStoresMode(id: HTMLFormElement) {\n    this.editMode = true;\n    this.Id = +id.name;\n    this.currentStore = this.getStoreIndex(this.Id)[0];\n\n    //console.log(this.Id);\n    // console.log(this.store[1].Name);\n    this.Name = this.currentStore[\"Name\"];\n    this.CompanyName = this.currentStore[\"CompanyName\"];\n    this.CompanyAddress = this.currentStore[\"CompanyAddress\"];\n    this.CompanyPhoneNumber = this.currentStore[\"CompanyPhoneNumber\"];\n    this.CompanyVat = this.currentStore[\"CompanyVat\"];\n    this.Url = this.currentStore[\"Url\"];\n    this.DisplayOrder = this.currentStore[\"DisplayOrder\"];\n\n\n  }\n  editStores() {\n    this.editMode = false;\n    this.Name = this.storeForm.value.Name;\n    this.CompanyName = this.storeForm.value.CompanyName;\n    this.CompanyAddress = this.storeForm.value.CompanyAddress;\n    this.CompanyPhoneNumber = this.storeForm.value.CompanyPhoneNumber;\n    this.CompanyVat = this.storeForm.value.CompanyVat;\n    this.Url = this.storeForm.value.Url;\n    this.DisplayOrder = this.storeForm.value.DisplayOrder;\n\n\n    this.currentStore[\"Name\"] = this.Name;\n    this.currentStore[\"CompanyName\"] = this.CompanyName;\n    this.currentStore[\"CompanyAddress\"] = this.CompanyAddress;\n    this.currentStore[\"CompanyPhoneNumber\"] = this.CompanyPhoneNumber;\n    this.currentStore[\"CompanyVat\"] = this.CompanyVat;\n    this.currentStore[\"Url\"] = this.Url;\n    this.currentStore[\"DisplayOrder\"] = this.DisplayOrder;\n\n    // localStorage.setItem(\"stores\",JSON.stringify(this.store));\n    this.storeService.updateStores(this.store)\n      .subscribe(\n      (data) => {\n\n        console.log(data.json());\n\n        this.getStores();\n        alert('Edited !');\n      },\n      (error) => {\n        console.log(error);\n        alert('Can\\'t fetch data ! Please refresh or check your connnection !');\n      }\n      );\n\n  }\n  getStores() {\n  //  this.store = JSON.parse(localStorage.getItem(\"stores\"));\n    this.storeService.getStores()\n      .subscribe(\n      (response) => {\n        this.stores = (response.json());\n        this.store = this.stores.Data;\n        console.log((this.store));\n      },\n      (error) => {\n        console.log(error)\n        alert('Can\\'t fetch data ! Please refresh or check your connnection !');\n      }\n      );\n\n  }\n  deleteStores(id: HTMLFormElement) {\n    const confirmation = confirm('Are you sure you want to delete ?');\n    if (confirmation) {\n      this.storeService.deleteStores(+id.name)\n        .subscribe(\n        (data) => {\n          console.log(data);\n\n          this.getStores();\n          alert('Deleted !');\n        },\n        (error) => {\n          console.log(error)\n          alert('Can\\'t fetch data ! Please refresh or check your connnection !')\n        }\n        );\n    }\n    if (this.editMode) {\n      this.editMode = false;\n\n    }\n  }\n  getStoreIndex(id:Number) {\n   return this.store.filter(\n       function(store){ return store.Id == id }\n   );\n }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StoresRoutingModule } from './stores-routing.module';\nimport { StoresComponent } from './stores.component';\nimport { PageHeaderModule } from './../../shared';\nimport { FormsModule } from '@angular/forms';\nimport { FilterPipe } from './filter.pipe';\nimport { StoresService } from './stores.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoresRoutingModule,\n    PageHeaderModule,\n    FormsModule,\n    // ImageUploadModule.forRoot()\n    // ProductTagsModule\n  ],\n  providers:[StoresService],\n  declarations: [StoresComponent, FilterPipe]\n})\nexport class StoresModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.module.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\n\n@Injectable()\nexport class StoresService {\n    temp: {};\n    constructor(private http: Http) { }\n    storeStores(store) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        this.temp = store[store.length-1];\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Stores/CreateStore?continueEditing=true', this.temp,\n            { headers: headers });\n\n    }\n    getStores() {\n        return this.http.get('http://piyushdaftary-001-site1.ctempurl.com/api/Stores');\n    }\n    updateStores(store) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        console.log(store);\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Stores/EditStore?continueEditing=true', store, { headers: headers });\n    }\n    deleteStores(id) {\n        const headers = new Headers({ 'Content-Type': 'application/json' });\n        console.log(\"Id = \" + id);\n        //console.log(store);\n        return this.http.post('http://piyushdaftary-001-site1.ctempurl.com/api/Stores/DeleteStore?id='+id, null, { headers: headers });\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/elliot/Projects/Freelance/DS/src/app/layout/stores/stores.service.ts"],"sourceRoot":"webpack:///"}